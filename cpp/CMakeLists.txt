cmake_minimum_required(VERSION 3.18.0)
project(AdsToJava-3 VERSION 3.0.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
if (STRICT_WARNINGS)
    # set(CMAKE_CXX_CLANG_TIDY "clang-tidy;-fix")
    set(CMAKE_CXX_CLANG_TIDY clang-tidy)
endif()

include(CTest)
enable_testing()

set(ADSTOJAVA_FILE_VERSION_MAJOR 3)
set(ADSTOJAVA_FILE_VERSION_MINOR 0)
set(ADSTOJAVA_FILE_VERSION "${ADSTOJAVA_FILE_VERSION_MAJOR}.${ADSTOJAVA_FILE_VERSION_MINOR}")
add_compile_definitions(ADSTOJAVA_FILE_VERSION_MAJOR=${ADSTOJAVA_FILE_VERSION_MAJOR})
add_compile_definitions(ADSTOJAVA_FILE_VERSION_MINOR=${ADSTOJAVA_FILE_VERSION_MINOR})
string(REPLACE "." "," ADSTOJAVA_FILE_VERSION_CS "${ADSTOJAVA_FILE_VERSION}")

file(GLOB SOURCES
    *.h
    *.cpp
)

if(MSVC)
    configure_file(
        ${CMAKE_CURRENT_SOURCE_DIR}/version.rc.in
        ${CMAKE_CURRENT_BINARY_DIR}/version.rc
        @ONLY)
    add_library(AdsToJava-3 SHARED ${SOURCES}
        ${CMAKE_CURRENT_BINARY_DIR}/version.rc)

    if (STRICT_WARNINGS)
        target_compile_options(AdsToJava-3 PRIVATE /W4 /WX)
    endif()
else()
    add_library(AdsToJava-3 SHARED ${SOURCES})

    if (STRICT_WARNINGS)
        target_compile_options(AdsToJava-3 PRIVATE -Wall -Wextra -Wpedantic -Werror)
    endif()
endif()

add_compile_definitions(NOMINMAX)
if (NOT WIN32)
    add_compile_definitions(POSIX)
endif()

target_include_directories(AdsToJava-3 PRIVATE "$ENV{JAVA_HOME}/include/")
if (WIN32)
    target_include_directories(AdsToJava-3 PRIVATE "$ENV{JAVA_HOME}/include/win32/")
elseif (EXISTS "$ENV{JAVA_HOME}/include/freebsd")
    target_include_directories(AdsToJava-3 PRIVATE "$ENV{JAVA_HOME}/include/freebsd/")
else()
    target_include_directories(AdsToJava-3 PRIVATE "$ENV{JAVA_HOME}/include/unix/")
endif()

if (EXISTS "dependencies")
    target_include_directories(AdsToJava-3 PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/../dependencies/AdsApi/TcAdsDll/Include/")
    if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" "libTcAdsDll" HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../dependencies/AdsApi/TcAdsDll/Lib/" REQUIRED)
    else()
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" "libTcAdsDll" HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../dependencies/AdsApi/TcAdsDll/Lib/x64/" REQUIRED)
    endif()
elseif (WIN32)
    get_filename_component(TWINCAT_INSTALL_DIR "[HKEY_CURRENT_USER\\Software\\Beckhoff\\TwinCAT3\\3.1;InstallDir]" REALPATH)
    if(NOT EXISTS "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll")
        get_filename_component(TWINCAT_INSTALL_DIR "[HKEY_LOCAL_MACHINE\\Software\\Beckhoff\\TwinCAT3\\3.1;InstallDir]" REALPATH)
        if(NOT EXISTS "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll")
            get_filename_component(TWINCAT_INSTALL_DIR "[HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Beckhoff\\TwinCAT3\\3.1;InstallDir]" REALPATH)
            if(NOT EXISTS "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll")
                message(FATAL_ERROR "Make sure that TwinCAT 3.1 is installed correctly (${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll does not exist).")
            endif()
        endif()
    endif()

    if(EXISTS "${TWINCAT_INSTALL_DIR}/sdk/Include")
        # preferring the sdk/Include directory because the header files from ../AdsApi/TcAdsDll/Include/ might be too old
        target_include_directories(AdsToJava-3 PRIVATE "${TWINCAT_INSTALL_DIR}/sdk/Include/")
    else()
        target_include_directories(AdsToJava-3 PRIVATE "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll/Include")
    endif()

    if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" HINTS "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll/Lib/" REQUIRED)
    else()
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" HINTS "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll/Lib/x64/" "${TWINCAT_INSTALL_DIR}/../AdsApi/TcAdsDll/x64/lib/" REQUIRED)
    endif()
else()
    target_include_directories(AdsToJava-3 PRIVATE "/usr/local/include/")
    if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" "libTcAdsDll" HINTS "/usr/local/lib32/" REQUIRED)
    else()
        find_library(TC_ADS_DLL_LIBRARY NAMES "TcAdsDll" "libTcAdsDll" HINTS "/usr/local/lib/" REQUIRED)
    endif()
endif()
target_link_libraries(AdsToJava-3 "${TC_ADS_DLL_LIBRARY}")

if("${CMAKE_GENERATOR}" MATCHES "Visual Studio")
    get_filename_component(SDK_DIR "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows;CurrentInstallFolder]" REALPATH)
    get_filename_component(KIT_DIR "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot10]" REALPATH)
    file(GLOB KIT_VER_DIRS "${KIT_DIR}/Lib/10.*.*.*")
    list(SORT KIT_VER_DIRS ORDER DESCENDING)
    foreach(KIT_VER_DIR ${KIT_VER_DIRS})
        if(CMAKE_SIZEOF_VOID_P EQUAL 8 AND EXISTS "${KIT_VER_DIR}/um/x64")
            list(APPEND EXISTING_KIT_VER_BIND_DIRS "${KIT_VER_DIR}/um/x64/")
        elseif(EXISTS "${KIT_VER_DIR}/um/x86")
            list(APPEND EXISTING_KIT_VER_BIND_DIRS "${KIT_VER_DIR}/um/x86/")
        endif()
    endforeach()

    list(GET EXISTING_KIT_VER_BIND_DIRS 0 LATEST_EXISTING_KIT_VER_BIND_DIR)
    find_library(VERSION_LIBRARY NAMES "Version" HINTS "${LATEST_EXISTING_KIT_VER_BIND_DIR}" REQUIRED)
    target_link_libraries(AdsToJava-3 "${VERSION_LIBRARY}")
endif()

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
